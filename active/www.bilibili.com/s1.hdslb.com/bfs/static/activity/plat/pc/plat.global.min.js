var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function(a) {
    var b = 0;
    return function() {
        return b < a.length ? {
            done: !1,
            value: a[b++]
        } : {
            done: !0
        }
    }
};
$jscomp.arrayIterator = function(a) {
    return {
        next: $jscomp.arrayIteratorImpl(a)
    }
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.ISOLATE_POLYFILLS = !1;
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, d) {
    if (a == Array.prototype || a == Object.prototype) return a;
    a[b] = d.value;
    return a
};
$jscomp.getGlobal = function(a) {
    a = ["object" == typeof globalThis && globalThis, a, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
    for (var b = 0; b < a.length; ++b) {
        var d = a[b];
        if (d && d.Math == Math) return d
    }
    throw Error("Cannot find global object");
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x");
$jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
$jscomp.polyfills = {};
$jscomp.propertyToPolyfillSymbol = {};
$jscomp.POLYFILL_PREFIX = "$jscp$";
var $jscomp$lookupPolyfilledValue = function(a, b) {
    var d = $jscomp.propertyToPolyfillSymbol[b];
    if (null == d) return a[b];
    d = a[d];
    return void 0 !== d ? d : a[b]
};
$jscomp.polyfill = function(a, b, d, f) {
    b && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(a, b, d, f) : $jscomp.polyfillUnisolated(a, b, d, f))
};
$jscomp.polyfillUnisolated = function(a, b, d, f) {
    d = $jscomp.global;
    a = a.split(".");
    for (f = 0; f < a.length - 1; f++) {
        var e = a[f];
        if (!(e in d)) return;
        d = d[e]
    }
    a = a[a.length - 1];
    f = d[a];
    b = b(f);
    b != f && null != b && $jscomp.defineProperty(d, a, {
        configurable: !0,
        writable: !0,
        value: b
    })
};
$jscomp.polyfillIsolated = function(a, b, d, f) {
    var e = a.split(".");
    a = 1 === e.length;
    f = e[0];
    f = !a && f in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
    for (var h = 0; h < e.length - 1; h++) {
        var c = e[h];
        if (!(c in f)) return;
        f = f[c]
    }
    e = e[e.length - 1];
    d = $jscomp.IS_SYMBOL_NATIVE && "es6" === d ? f[e] : null;
    b = b(d);
    null != b && (a ? $jscomp.defineProperty($jscomp.polyfills, e, {
        configurable: !0,
        writable: !0,
        value: b
    }) : b !== d && ($jscomp.propertyToPolyfillSymbol[e] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(e) : $jscomp.POLYFILL_PREFIX + e, e =
        $jscomp.propertyToPolyfillSymbol[e], $jscomp.defineProperty(f, e, {
            configurable: !0,
            writable: !0,
            value: b
        })))
};
$jscomp.initSymbol = function() {};
$jscomp.polyfill("Symbol", function(a) {
    if (a) return a;
    var b = function(e, h) {
        this.$jscomp$symbol$id_ = e;
        $jscomp.defineProperty(this, "description", {
            configurable: !0,
            writable: !0,
            value: h
        })
    };
    b.prototype.toString = function() {
        return this.$jscomp$symbol$id_
    };
    var d = 0,
        f = function(e) {
            if (this instanceof f) throw new TypeError("Symbol is not a constructor");
            return new b("jscomp_symbol_" + (e || "") + "_" + d++, e)
        };
    return f
}, "es6", "es3");
$jscomp.initSymbolIterator = function() {};
$jscomp.polyfill("Symbol.iterator", function(a) {
        if (a) return a;
        a = Symbol("Symbol.iterator");
        for (var b = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), d = 0; d < b.length; d++) {
            var f = $jscomp.global[b[d]];
            "function" === typeof f && "function" != typeof f.prototype[a] && $jscomp.defineProperty(f.prototype, a, {
                configurable: !0,
                writable: !0,
                value: function() {
                    return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
                }
            })
        }
        return a
    }, "es6",
    "es3");
$jscomp.initSymbolAsyncIterator = function() {};
$jscomp.iteratorPrototype = function(a) {
    a = {
        next: a
    };
    a[Symbol.iterator] = function() {
        return this
    };
    return a
};
(function(a) {
    try {
        var b = !!Symbol.iterator
    } catch (e) {
        b = !1
    }
    var d = function(e) {
            var h = {
                next: function() {
                    var c = e.shift();
                    return {
                        done: void 0 === c,
                        value: c
                    }
                }
            };
            b && (h[Symbol.iterator] = function() {
                return h
            });
            return h
        },
        f = function() {
            var e = function(c) {
                    Object.defineProperty(this, "_entries", {
                        writable: !0,
                        value: {}
                    });
                    var g = typeof c;
                    if ("undefined" !== g)
                        if ("string" === g) "" !== c && this._fromString(c);
                        else if (c instanceof e) {
                        var k = this;
                        c.forEach(function(m, n) {
                            k.append(n, m)
                        })
                    } else if (null !== c && "object" === g)
                        if ("[object Array]" === Object.prototype.toString.call(c))
                            for (g =
                                0; g < c.length; g++) {
                                var l = c[g];
                                if ("[object Array]" === Object.prototype.toString.call(l) || 2 !== l.length) this.append(l[0], l[1]);
                                else throw new TypeError("Expected [string, any] as entry at index " + g + " of URLSearchParams's input");
                            } else
                                for (l in c) c.hasOwnProperty(l) && this.append(l, c[l]);
                        else throw new TypeError("Unsupported input's type for URLSearchParams");
                },
                h = e.prototype;
            h.append = function(c, g) {
                c in this._entries ? this._entries[c].push(String(g)) : this._entries[c] = [String(g)]
            };
            h["delete"] = function(c) {
                delete this._entries[c]
            };
            h.get = function(c) {
                return c in this._entries ? this._entries[c][0] : null
            };
            h.getAll = function(c) {
                return c in this._entries ? this._entries[c].slice(0) : []
            };
            h.has = function(c) {
                return c in this._entries
            };
            h.set = function(c, g) {
                this._entries[c] = [String(g)]
            };
            h.forEach = function(c, g) {
                var k;
                for (k in this._entries)
                    if (this._entries.hasOwnProperty(k)) {
                        var l = this._entries[k];
                        for (var m = 0; m < l.length; m++) c.call(g, l[m], k, this)
                    }
            };
            h.keys = function() {
                var c = [];
                this.forEach(function(g, k) {
                    c.push(k)
                });
                return d(c)
            };
            h.values = function() {
                var c = [];
                this.forEach(function(g) {
                    c.push(g)
                });
                return d(c)
            };
            h.entries = function() {
                var c = [];
                this.forEach(function(g, k) {
                    c.push([k, g])
                });
                return d(c)
            };
            b && (h[Symbol.iterator] = h.entries);
            h.toString = function() {
                var c = [];
                this.forEach(function(g, k) {
                    c.push(encodeURIComponent(k).replace(/%20/g, "+") + "=" + encodeURIComponent(g).replace(/%20/g, "+"))
                });
                return c.join("&")
            };
            a.URLSearchParams = e
        };
    "URLSearchParams" in a && "a=1" === (new URLSearchParams("?a=1")).toString() || f();
    f = URLSearchParams.prototype;
    "function" !== typeof f.sort &&
        (f.sort = function() {
            var e = this,
                h = [];
            this.forEach(function(g, k) {
                h.push([k, g]);
                e._entries || e["delete"](k)
            });
            h.sort(function(g, k) {
                return g[0] < k[0] ? -1 : g[0] > k[0] ? 1 : 0
            });
            e._entries && (e._entries = {});
            for (var c = 0; c < h.length; c++) this.append(h[c][0], h[c][1])
        });
    "function" !== typeof f._fromString && Object.defineProperty(f, "_fromString", {
        enumerable: !1,
        configurable: !1,
        writable: !1,
        value: function(e) {
            if (this._entries) this._entries = {};
            else {
                var h = [];
                this.forEach(function(k, l) {
                    h.push(l)
                });
                for (var c = 0; c < h.length; c++) this["delete"](h[c])
            }
            e =
                e.replace(/^\?/, "");
            e = e.split("&");
            for (c = 0; c < e.length; c++) {
                var g = e[c].split("=");
                this.append(decodeURIComponent(String(g[0]).replace(/\+/g, " ")), 1 < g.length ? decodeURIComponent(String(g[1]).replace(/\+/g, " ")) : "")
            }
        }
    })
})("undefined" !== typeof global ? global : "undefined" !== typeof window ? window : "undefined" !== typeof self ? self : this);
(function(a) {
    var b = function() {
        var f = a.URL,
            e = function(g, k) {
                "string" !== typeof g && (g = String(g));
                var l = document;
                if (k && (void 0 === a.location || k !== a.location.href)) {
                    l = document.implementation.createHTMLDocument("");
                    var m = l.createElement("base");
                    m.href = k;
                    l.head.appendChild(m);
                    try {
                        if (0 !== m.href.indexOf(k)) throw Error(m.href);
                    } catch (q) {
                        throw Error("URL unable to set base " + k + " due to " + q);
                    }
                }
                var n = l.createElement("a");
                n.href = g;
                m && (l.body.appendChild(n), n.href = n.href);
                if (":" === n.protocol || !/:/.test(n.href)) throw new TypeError("Invalid URL");
                Object.defineProperty(this, "_anchorElement", {
                    value: n
                });
                var p = new URLSearchParams(this.search),
                    r = !0,
                    t = !0,
                    v = this;
                ["append", "delete", "set"].forEach(function(q) {
                    var w = p[q];
                    p[q] = function() {
                        w.apply(p, arguments);
                        r && (t = !1, v.search = p.toString(), t = !0)
                    }
                });
                Object.defineProperty(this, "searchParams", {
                    value: p,
                    enumerable: !0
                });
                var u = void 0;
                Object.defineProperty(this, "_updateSearchParams", {
                    enumerable: !1,
                    configurable: !1,
                    writable: !1,
                    value: function() {
                        this.search !== u && (u = this.search, t && (r = !1, this.searchParams._fromString(this.search),
                            r = !0))
                    }
                })
            },
            h = e.prototype,
            c = function(g) {
                Object.defineProperty(h, g, {
                    get: function() {
                        return this._anchorElement[g]
                    },
                    set: function(k) {
                        this._anchorElement[g] = k
                    },
                    enumerable: !0
                })
            };
        ["hash", "host", "hostname", "port", "protocol"].forEach(function(g) {
            c(g)
        });
        Object.defineProperty(h, "search", {
            get: function() {
                return this._anchorElement.search
            },
            set: function(g) {
                this._anchorElement.search = g;
                this._updateSearchParams()
            },
            enumerable: !0
        });
        Object.defineProperties(h, {
            toString: {
                get: function() {
                    var g = this;
                    return function() {
                        return g.href
                    }
                }
            },
            href: {
                get: function() {
                    return this._anchorElement.href.replace(/\?$/, "")
                },
                set: function(g) {
                    this._anchorElement.href = g;
                    this._updateSearchParams()
                },
                enumerable: !0
            },
            pathname: {
                get: function() {
                    return this._anchorElement.pathname.replace(/(^\/?)/, "/")
                },
                set: function(g) {
                    this._anchorElement.pathname = g
                },
                enumerable: !0
            },
            origin: {
                get: function() {
                    return this._anchorElement.protocol + "//" + this._anchorElement.hostname + (this._anchorElement.port != {
                            "http:": 80,
                            "https:": 443,
                            "ftp:": 21
                        }[this._anchorElement.protocol] && "" !== this._anchorElement.port ?
                        ":" + this._anchorElement.port : "")
                },
                enumerable: !0
            },
            password: {
                get: function() {
                    return ""
                },
                set: function(g) {},
                enumerable: !0
            },
            username: {
                get: function() {
                    return ""
                },
                set: function(g) {},
                enumerable: !0
            }
        });
        e.createObjectURL = function(g) {
            return f.createObjectURL.apply(f, arguments)
        };
        e.revokeObjectURL = function(g) {
            return f.revokeObjectURL.apply(f, arguments)
        };
        a.URL = e
    };
    (function() {
        try {
            var f = new URL("b", "http://a");
            f.pathname = "c%20d";
            return "http://a/c%20d" === f.href && f.searchParams
        } catch (e) {
            return !1
        }
    })() || b();
    if (void 0 !== a.location &&
        !("origin" in a.location)) {
        var d = function() {
            return a.location.protocol + "//" + a.location.hostname + (a.location.port ? ":" + a.location.port : "")
        };
        try {
            Object.defineProperty(a.location, "origin", {
                get: d,
                enumerable: !0
            })
        } catch (f) {
            setInterval(function() {
                a.location.origin = d()
            }, 100)
        }
    }
})("undefined" !== typeof global ? global : "undefined" !== typeof window ? window : "undefined" !== typeof self ? self : this);

function parseParamToObj(a) {
    if (a) {
        var b = a.search;
        b || (b = a.hash);
        a = b.indexOf("?");
        b = b.substring(a + 1);
        a = {};
        b = b.split("&");
        for (var d = 0, f = b.length; d < f; d++) {
            var e = b[d].split("=");
            "" === e[1] && e.push("");
            a[e[0]] = e[1]
        }
        return a
    }
}

function parseHref(a) {
    if (a) {
        var b = a,
            d = {
                hash: ""
            };
        /(https?:)?\/\//.test(b) && (d = new URL(a.replace(/(https?:)?(\/\/)(.+)/ig, location.protocol + "$2$3")), d.hash && (b = d.origin + d.pathname));
        a = -1 !== b.indexOf("?");
        var f = window.location.search;
        return b = a && f ? b + "&" + f.replace("?", "") + d.hash : b + f + d.hash
    }
}
var sobj = parseParamToObj(location);
window.addEventListener("load", function() {
    var a = sobj.share_source || sobj.from;
    if (a) try {
        reportMsgObj["shared_" + a] = 1, reportObserver.forceCommit()
    } catch (f) {
        return
    }
    if (sobj.msource) try {
        reportMsgObj["msource_" + sobj.msource] = 1, reportObserver.forceCommit()
    } catch (f) {
        return
    }
    a = document.querySelectorAll("div a");
    for (var b = 0, d = a.length; b < d; b++) a[b].href && (a[b].href = parseHref(a[b].href))
});
window.__BILI_CONFIG__ = {
    show_bv: !0
};
var activityApmId = 200003;
window.performance && window.performance.setResourceTimingBufferSize && performance.setResourceTimingBufferSize(300);

function xhrrequest(a, b) {
    var d = new XMLHttpRequest;
    d.withCredentials = !0;
    d.open("POST", a, !0);
    d.send(b);
    return d
}

function dectBrowser() {
    var a = navigator.userAgent.toLocaleLowerCase(),
        b = /iemobile/i.test(a),
        d = /android|adr|linux/gi.test(a),
        f = /ipad|iphone|ipod/.test(a),
        e = -1 < a.indexOf("bili");
    if (f || d || b || e) try {
        var h = a.match(/cpu iphone os (.*?) like mac os/);
        if (f && h) return "iOS " + h[1].replace(/_/g, ".");
        if (d) return "Android " + (a.match(/android [\d._]+/gi) + "").replace(/[^0-9|_.]/ig, "").replace(/_/ig, ".")
    } catch (c) {}
    return -1 < a.indexOf("chrome") && -1 < a.indexOf("safari") ? "chrome" : -1 < a.indexOf("safari") && -1 == a.indexOf("chrome") ?
        "safari" : (b = -1 < a.indexOf("opera")) ? "opera" : -1 < a.indexOf("edge") ? "edge" : -1 < a.indexOf("firefox") ? "firefox" : -1 < a.indexOf("compatible") && -1 < a.indexOf("msie") && !b ? (/msie (\d+\.\d+);/.test(a), "IE " + parseFloat(RegExp.$1)) : a
}

function getCookie(a) {
    var b;
    return (b = document.cookie.match(new RegExp("(^| )" + a + "=([^;]*)(;|$)"))) ? unescape(b[2]) : null
};